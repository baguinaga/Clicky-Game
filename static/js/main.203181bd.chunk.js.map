{"version":3,"sources":["Components/Card/Card.js","App.js","index.js"],"names":["App","props","react_default","a","createElement","className","onClick","handleCharSel","id","src","image","alt","name","state","characters","selected","score","highscore","handleCharShuffle","charShuffled","Object","toConsumableArray","_this","sort","b","Math","random","setState","charSelected","includes","push","prevState","_this2","this","map","char","i","Card_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+jFAceA,SAXH,SAAAC,GAAK,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,gBACVC,QAAS,kBAAML,EAAMM,cAAcN,EAAMO,MAEzCN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,MAAOC,IAAKV,EAAMW,kBCgEzBZ,oNAnEba,MAAQ,CACNC,WAAYA,EACZC,SAAU,GACVC,MAAO,EACPC,UAAW,KAGbC,kBAAoB,WAClB,IAAMC,EAAYC,OAAAC,EAAA,EAAAD,CAAOE,EAAKT,MAAMC,YAEpCK,EAAaI,KAAK,SAASpB,EAAGqB,GAC5B,MAAO,GAAMC,KAAKC,WAGpBJ,EAAKK,SAAS,CAAEb,WAAYK,OAG9BZ,cAAgB,SAAAC,GACd,IAAMoB,EAAYR,OAAAC,EAAA,EAAAD,CAAOE,EAAKT,MAAME,UAE/Ba,EAAaC,SAASrB,IAezBc,EAAKJ,oBACLI,EAAKK,SAAS,CACZZ,SAAU,GACVC,MAAO,MAjBTY,EAAaE,KAAKtB,GAElBc,EAAKJ,oBACLI,EAAKK,SAAS,SAACI,EAAW9B,GACxB,MAAO,CACLc,SAAUa,EACVZ,MAAOe,EAAUf,MAAQ,EACzBC,UACEc,EAAUd,UAAYc,EAAUf,MAAQ,EACpCe,EAAUd,UACVc,EAAUf,MAAQ,+EAYvB,IAAAgB,EAAAC,KACP,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACSF,EAAAC,EAAAC,cAAA,YAAO6B,KAAKpB,MAAMG,OAD3B,cACoD,IAClDd,EAAAC,EAAAC,cAAA,YAAO6B,KAAKpB,MAAMI,YAEpBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZ4B,KAAKpB,MAAMC,WAAWoB,IAAI,SAACC,EAAMC,GAAP,OACzBlC,EAAAC,EAAAC,cAACiC,EAAD,CACEC,IAAKH,EAAK3B,GACVA,GAAI2B,EAAK3B,GACTE,MAAOyB,EAAKzB,MACZC,IAAKwB,EAAKvB,KACVL,cAAeyB,EAAKzB,2BA3DhBgC,cCAlBC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.203181bd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst App = props => (\n  <div className=\"card\">\n    <div\n      className=\"img-container\"\n      onClick={() => props.handleCharSel(props.id)}\n    >\n      <img src={props.image} alt={props.name} />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React, { Component } from \"react\";\nimport Card from \"./Components/Card\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    characters: characters,\n    selected: [],\n    score: 0,\n    highscore: 0\n  };\n\n  handleCharShuffle = () => {\n    const charShuffled = [...this.state.characters];\n\n    charShuffled.sort(function(a, b) {\n      return 0.5 - Math.random();\n    });\n\n    this.setState({ characters: charShuffled });\n  };\n\n  handleCharSel = id => {\n    const charSelected = [...this.state.selected];\n\n    if (!charSelected.includes(id)) {\n      charSelected.push(id);\n      \n      this.handleCharShuffle();\n      this.setState((prevState, props) => {\n        return {\n          selected: charSelected,\n          score: prevState.score + 1,\n          highscore:\n            prevState.highscore > prevState.score + 1\n              ? prevState.highscore\n              : prevState.score + 1\n        };\n      });\n    } else {\n      this.handleCharShuffle();\n      this.setState({\n        selected: [],\n        score: 0\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container text-center\">\n        <h1>Clicky Game</h1>\n        <h2>\n          Score: <span>{this.state.score}</span> Highscore:{\" \"}\n          <span>{this.state.highscore}</span>\n        </h2>\n        <div className=\"wrapper\">\n          {this.state.characters.map((char, i) => (\n            <Card\n              key={char.id}\n              id={char.id}\n              image={char.image}\n              alt={char.name}\n              handleCharSel={this.handleCharSel}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}